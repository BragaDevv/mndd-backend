import { Router, Request, Response } from "express";
import OpenAI from "openai";
import dotenv from "dotenv";

dotenv.config();

const router = Router();

const openai = new OpenAI({
  apiKey: process.env.OPENAI_API_KEY,
});

// Log ao inicializar
console.log("‚úÖ Rota /notificacao-ia configurada.");

// Fun√ß√£o que monta o prompt
function buildPrompt(tema: string) {
  return `
Gere uma notifica√ß√£o push crist√£ para o aplicativo MNDD com o tema: "${tema}".

Regras:
- T√çTULO FIXO: "Palavra de Hoje"
- Responda apenas o CORPO, com:
  ‚Ä¢ 1 vers√≠culo b√≠blico curto (uma linha) + a refer√™ncia abreviada;
  ‚Ä¢ 1 frase breve de aplica√ß√£o pr√°tica;
  ‚Ä¢ 1‚Äì2 emojis relevantes.
- M√°ximo: 240 caracteres.
- N√£o inclua o t√≠tulo. N√£o use aspas no come√ßo/fim.
Exemplo de estilo: O Senhor √© o meu pastor (Sl 23:1) | Confie hoje na provis√£o de Deus! üïäÔ∏è
`;
}

router.post("/notificacao-ia", async (req: Request, res: Response) => {
  const { tema } = req.body;

  if (!tema || typeof tema !== "string") {
    return res.status(400).json({ error: "Campo 'tema' √© obrigat√≥rio." });
  }

  try {
    console.log(`üì© [IA] Gerando notifica√ß√£o para tema: ${tema}`);

    const completion = await openai.chat.completions.create({
      model: "gpt-3.5-turbo", // pode trocar para "gpt-4o-mini" se dispon√≠vel
      temperature: 0.7,
      max_tokens: 180,
      messages: [
        {
          role: "system",
          content: "Voc√™ √© um assistente b√≠blico crist√£o que escreve notifica√ß√µes curtas para app.",
        },
        {
          role: "user",
          content: buildPrompt(tema),
        },
      ],
    });

    const corpo = completion.choices[0]?.message?.content?.trim();

    if (!corpo) {
      throw new Error("IA n√£o retornou conte√∫do.");
    }

    const resposta = {
      titulo: "Palavra de Hoje",
      corpo,
    };

    console.log("‚úÖ [IA] Notifica√ß√£o gerada:", resposta);

    return res.json(resposta);
  } catch (err: any) {
    console.error("‚ùå Erro IA:", err?.message || err);
    return res.status(500).json({ error: "Erro ao gerar notifica√ß√£o IA." });
  }
});

export default router;
